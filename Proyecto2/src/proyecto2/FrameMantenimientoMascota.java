/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto2;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcos
 */
public class FrameMantenimientoMascota extends javax.swing.JFrame {

    /**
     * Creates new form FrameMantenimientoDueño
     */
    private int tipo;
    ConexionPostgres CP;
    DefaultTableModel modelo;
    ArrayList codR;

    public FrameMantenimientoMascota() throws ClassNotFoundException, SQLException {
        initComponents();
        this.setLocationRelativeTo(null);
        tipo = 0;
        CP = new ConexionPostgres("dbProyecto", "usrUTN", "12345");
        correr();
        comboCedula();
        comboRaza();
        comboAnno();
    }

    public void comboCedula() throws SQLException {
        ResultSet datos = CP.select("cedula", "\"schProyecto\".\"dueno\"", "");
        ResultSet datos2 = CP.select("nombre", "\"schProyecto\".\"dueno\"", "");
        String a = "";
        String b = "";
        while (datos.next()) {
            a = datos.getString(1);
            if (datos2.next()) {
                b = datos2.getString(1);
            }
            cedula.addItem(a);
            nomDueno.addItem(b);
        }
    }

    public void comboAnno() {
        for (int i = 1900; i <= 2013; i++) {
            anno.addItem(i);
        }
    }

    public void comboRaza() throws SQLException {
        ResultSet datos = CP.select("cod_raza", "\"schProyecto\".\"raza\"", "");
        ResultSet datos2 = CP.select("descripcion", "\"schProyecto\".\"raza\"", "");
        codR = new ArrayList();
        String b = "";
        while (datos.next()) {
            codR.add(datos.getString(1));
            if (datos2.next()) {
                b = datos2.getString(1);
            }
            codRaza.addItem(b);
        }
    }

    public void correr() {
        String principal[] = {"Nombre", "Fecha Nac", "Cod Raza", "Cedula", "Cod Mascota"};
        String datos[][] = {};
        modelo = new DefaultTableModel(datos, principal);
        tablaMascota.setModel(modelo);
        this.Select();
    }

    public void Select() {
        String nom = "";
        String nac = "";
        String cRaza = "";
        String ced = "";
        String cMasc = "";
        try {
            ResultSet datos = CP.select("*", "\"schProyecto\".\"mascota\"", "");
            while (datos.next()) {
                nom = datos.getString(1);
                nac = datos.getString(2);
                cRaza = datos.getString(3);
                ced = datos.getString(4);
                cMasc = datos.getString(5);
                Object datostabla[] = {nom, nac, cRaza, ced, cMasc};
                modelo.addRow(datostabla);
            }
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaMascota = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        codMascota = new javax.swing.JTextField();
        ok = new javax.swing.JButton();
        regresar = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        insertar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        cedula = new javax.swing.JComboBox();
        nomDueno = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        codRaza = new javax.swing.JComboBox();
        dia = new javax.swing.JComboBox();
        mes = new javax.swing.JComboBox();
        anno = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaMascota.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Fecha Nac", "Cod Raza", "Cedula", "Cod Mascota"
            }
        ));
        tablaMascota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMascotaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaMascota);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 560, 150));

        jLabel1.setText("Cédula");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, -1));

        jLabel2.setText("Nombre");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, -1, -1));

        nombre.setEditable(false);
        getContentPane().add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 70, -1));

        jLabel3.setText("Fecha Nacimiento");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 230, -1, -1));

        jLabel4.setText("Código Raza");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 280, -1, -1));

        jLabel5.setText("Cod Mascota");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, -1, -1));

        codMascota.setEditable(false);
        getContentPane().add(codMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 100, -1));

        ok.setText("OK");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });
        getContentPane().add(ok, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, -1, -1));

        regresar.setText("Regresar");
        regresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarActionPerformed(evt);
            }
        });
        getContentPane().add(regresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, -1, -1));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        insertar.setText("Insertar");
        insertar.setFocusable(false);
        insertar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        insertar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        insertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertarActionPerformed(evt);
            }
        });
        jToolBar1.add(insertar);

        eliminar.setText("Eliminar");
        eliminar.setFocusable(false);
        eliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(eliminar);

        modificar.setText("Modificar");
        modificar.setFocusable(false);
        modificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        modificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });
        jToolBar1.add(modificar);

        getContentPane().add(jToolBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 210, 30));

        cedula.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cedula.setEnabled(false);
        cedula.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cedulaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(cedula, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 110, -1));

        nomDueno.setEnabled(false);
        nomDueno.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                nomDuenoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(nomDueno, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 70, -1));

        jLabel6.setText("Nombre Dueño");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, -1, -1));

        codRaza.setEnabled(false);
        getContentPane().add(codRaza, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 300, 120, -1));

        dia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        dia.setEnabled(false);
        getContentPane().add(dia, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 250, -1, -1));

        mes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        mes.setEnabled(false);
        mes.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                mesPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(mes, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 250, -1, -1));

        anno.setEnabled(false);
        getContentPane().add(anno, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 250, 60, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertarActionPerformed
        nombre.setText("");
        codMascota.setText("");
        cedula.setEnabled(true);
        nomDueno.setEnabled(true);
        codRaza.setEnabled(true);
        nombre.setEditable(true);
        codMascota.setEditable(true);
        anno.setEnabled(true);
        mes.setEnabled(true);
        tipo = 1;
    }//GEN-LAST:event_insertarActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        if (tipo == 1) {
            String datos = "";
            datos = "('" + this.nombre.getText() + "','"
                    + dia.getSelectedItem().toString() + "/" + (mes.getSelectedIndex() + 1) + "/" + anno.getSelectedItem().toString() + "','" + this.codR.get(codRaza.getSelectedIndex()) + "','"
                    + this.cedula.getSelectedItem().toString() + "','" + this.codMascota.getText() + "')";
            this.CP.insertar("\"schProyecto\".mascota", datos);
            nombre.setEditable(false);
            codMascota.setEditable(false);
            cedula.setEnabled(false);
            nomDueno.setEnabled(false);
            codRaza.setEnabled(false);
            anno.setEnabled(false);
            mes.setEnabled(false);
            dia.setEnabled(false);
            nombre.setText("");
            codMascota.setText("");
            correr();
        } else if (tipo == 2) {
            String estado;
            String datos;
            datos = "set \"nombre\" = '" + this.nombre.getText()
                    + "' where \"cod_mascota\" = '" + this.codMascota.getText() + "'";
            estado = this.CP.modificar("\"schProyecto\".mascota", datos);
            datos = "set \"fecha_nacimiento\" = '" + dia.getSelectedItem().toString() + "/" + (mes.getSelectedIndex() + 1) + "/" + anno.getSelectedItem().toString()
                    + "' where \"cod_mascota\" = '" + this.codMascota.getText() + "'";
            estado = this.CP.modificar("\"schProyecto\".mascota", datos);
            datos = "set \"cod_raza\" = '" + codR.get(codRaza.getSelectedIndex())
                    + "' where \"cod_mascota\" = '" + this.codMascota.getText() + "'";
            estado = this.CP.modificar("\"schProyecto\".mascota", datos);
            datos = "set \"cedula\" = '" + this.cedula.getSelectedItem().toString()
                    + "' where \"cod_mascota\" = '" + this.codMascota.getText() + "'";
            estado = this.CP.modificar("\"schProyecto\".mascota", datos);
            nombre.setEditable(false);
            codMascota.setEditable(false);
            cedula.setEnabled(false);
            nomDueno.setEnabled(false);
            codRaza.setEnabled(false);
            anno.setEnabled(false);
            mes.setEnabled(false);
            this.correr();
        } else if (tipo == 3) {
            String estado;
            String datos;
            datos = " where cod_mascota = " + "'" + this.codMascota.getText() + "'";
            estado = this.CP.borrar("\"schProyecto\".mascota", datos);
            correr();
            nombre.setText("");
            codMascota.setText("");
        }
        tipo = 0;
    }//GEN-LAST:event_okActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        tipo = 3;
    }//GEN-LAST:event_eliminarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        nombre.setEditable(true);
        codMascota.setEditable(true);
        cedula.setEnabled(true);
        nomDueno.setEnabled(true);
        codRaza.setEnabled(true);
        anno.setEnabled(true);
        mes.setEnabled(true);
        tipo = 2;
    }//GEN-LAST:event_modificarActionPerformed

    private void tablaMascotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMascotaMouseClicked
        nombre.setText((String) modelo.getValueAt(tablaMascota.getSelectedRow(), 0));
        codMascota.setText((String) modelo.getValueAt(tablaMascota.getSelectedRow(), 4));
        for (int i = 0; i < codR.size(); i++) {
            String b = (String) modelo.getValueAt(tablaMascota.getSelectedRow(), 2);
            if (b.equalsIgnoreCase(codR.get(i).toString())) {
                codRaza.setSelectedIndex(i);
            }
        }
        int ind = 0;
        for (int i = 0; i < nomDueno.getItemCount(); i++) {
            cedula.setSelectedIndex(i);
            String b = (String) modelo.getValueAt(tablaMascota.getSelectedRow(), 3);
            if (b.equalsIgnoreCase(cedula.getSelectedItem().toString())) {
                String A = cedula.getSelectedItem().toString();
                ind = i;
            }
        }
        cedula.setSelectedIndex(ind);
        nomDueno.setSelectedIndex(ind);
    }//GEN-LAST:event_tablaMascotaMouseClicked

    private void regresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarActionPerformed
        this.dispose();
        FramePrincipal frame = new FramePrincipal();
        frame.setVisible(true);
    }//GEN-LAST:event_regresarActionPerformed

    private void cedulaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cedulaPopupMenuWillBecomeInvisible
        this.nomDueno.setSelectedIndex(cedula.getSelectedIndex());
        this.nomDueno.repaint();
    }//GEN-LAST:event_cedulaPopupMenuWillBecomeInvisible

    private void nomDuenoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_nomDuenoPopupMenuWillBecomeInvisible
        this.cedula.setSelectedIndex(nomDueno.getSelectedIndex());
        this.cedula.repaint();
    }//GEN-LAST:event_nomDuenoPopupMenuWillBecomeInvisible

    private void mesPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_mesPopupMenuWillBecomeInvisible
        dia.removeAllItems();
        if (mes.getSelectedIndex() == 1) {
            for (int i = 1; i <= 28; i++) {
                dia.addItem(i);
            }
        } else if (mes.getSelectedIndex() == 0 || mes.getSelectedIndex() == 2 || mes.getSelectedIndex() == 4 || mes.getSelectedIndex() == 6 || mes.getSelectedIndex() == 7
                || mes.getSelectedIndex() == 9 || mes.getSelectedIndex() == 11) {
            for (int i = 1; i <= 31; i++) {
                dia.addItem(i);
            }
        } else {
            for (int i = 1; i <= 30; i++) {
                dia.addItem(i);
            }
        }
        dia.setEnabled(true);
    }//GEN-LAST:event_mesPopupMenuWillBecomeInvisible

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameMantenimientoMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameMantenimientoMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameMantenimientoMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameMantenimientoMascota.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrameMantenimientoMascota().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(FrameMantenimientoMascota.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {
                    Logger.getLogger(FrameMantenimientoMascota.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox anno;
    private javax.swing.JComboBox cedula;
    private javax.swing.JTextField codMascota;
    private javax.swing.JComboBox codRaza;
    private javax.swing.JComboBox dia;
    private javax.swing.JButton eliminar;
    private javax.swing.JButton insertar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JComboBox mes;
    private javax.swing.JButton modificar;
    private javax.swing.JComboBox nomDueno;
    private javax.swing.JTextField nombre;
    private javax.swing.JButton ok;
    private javax.swing.JButton regresar;
    private javax.swing.JTable tablaMascota;
    // End of variables declaration//GEN-END:variables
}
